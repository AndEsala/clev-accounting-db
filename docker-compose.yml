# docker-compose.yml
services:
  postgres:
    container_name: ${PROJECT_NAME}_postgres
    build: 
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      POSTGRES_HOST: ${DB_HOST}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      DB_PORT: ${DB_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "${DB_PORT}:5432"
    networks:
      clev-network:
        ipv4_address: 192.168.100.7
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  flyway:
    container_name: ${PROJECT_NAME}_flyway
    image: flyway/flyway:11-alpine
    command: -configFiles=/flyway/conf/flyway.conf migrate
    environment:
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PORT: ${DB_PORT}
    volumes:
      - ./migrations:/flyway/sql
      - ./flyway.conf:/flyway/conf/flyway.conf
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      clev-network:

networks:
  clev-network:
    external: true

volumes:
  postgres_data:
    name: ${PROJECT_NAME}_pgdata